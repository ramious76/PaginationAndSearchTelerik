<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @foreach (var link in _links)
        {
            <li @onclick="() => OnSelectedPage(link)" style="cursor: pointer;" class="page-item @(link.Enabled ? null : "disabled") @(link.Active ? "active" : null)">
                <span class="page-link" href="#">@link.Text</span>
            </li>
        }
    </ul>
</nav>

@code {
    [Parameter]
    public PageMetadata PageMetadata { get; set; }
    [Parameter]
    public int Spread { get; set; }
    [Parameter]
    public EventCallback<int> SelectedPage { get; set; }

    private List<PagingLink> _links;

    protected override void OnParametersSet()
    {
        CreatePaginationLinks();
    }

    private void CreatePaginationLinks()
    {
        _links = new List<PagingLink>();

        _links.Add(new PagingLink(PageMetadata.CurrentPage - 1, PageMetadata.HasPrevious, "Previous"));

        for (int i = 1; i <= PageMetadata.TotalPages; i++)
        {
            if (i >= PageMetadata.CurrentPage - Spread && i <= PageMetadata.CurrentPage + Spread)
            {
                _links.Add(new PagingLink(i, true, i.ToString()) { Active = PageMetadata.CurrentPage == i });
            }
        }

        _links.Add(new PagingLink(PageMetadata.CurrentPage + 1, PageMetadata.HasNext, "Next"));
    }

    private async Task OnSelectedPage(PagingLink link)
    {
        if (link.Page == PageMetadata.CurrentPage || !link.Enabled)
            return;

        PageMetadata.CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }
}
